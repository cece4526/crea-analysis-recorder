<!DOCTYPE html>
<html lang="fr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Dashboard Céréales - CRÉA Analysis</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <link href="/build/app.css" rel="stylesheet">
    <link href="/build/dashboard.css" rel="stylesheet">
</head>
<body class="bg-light">
    <div class="container-fluid mt-3">
        <h1 class="text-center text-primary mb-4">📊 Dashboard de Production - Céréales</h1>
        
        <div class="row">
            <!-- OF 1 -->
            <div class="col-md-6">
                {% if of1 %}
                <div class="of-header">
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            <h3>🌾 OF {{ of1.numero }}</h3>
                            <p class="mb-0">
                                <span class="status-indicator status-{{ of1.statut }}"></span>
                                Statut: {{ of1.statut|upper }}
                            </p>
                            {% if of1.produit %}
                            <p class="mb-0">Produit: {{ of1.produit }}</p>
                            {% endif %}
                            {% if of1.quantite %}
                            <p class="mb-0">Quantité: {{ of1.quantite }}</p>
                            {% endif %}
                        </div>
                        <div>
                            <button class="btn btn-outline-primary btn-sm" onclick="openHaccpModal('{{ of1.numero }}', 'cereales')">
                                <i class="fas fa-shield-alt me-1"></i>HACCP
                            </button>
                        </div>
                    </div>
                </div>
                
                <div class="process-card">
                    <h5>📈 Processus de Production</h5>
                    <div class="row">
                        <div class="col-6">
                            <div class="text-center p-3 border rounded">
                                <div class="status-indicator status-en-cours"></div>
                                <strong>Cuves Céréales</strong>
                                <div class="mt-2">
                                    <small class="text-muted">Température: 85°C</small><br>
                                    <small class="text-muted">Durée: 45 min</small>
                                </div>
                            </div>
                        </div>
                        <div class="col-6">
                            <div class="text-center p-3 border rounded">
                                <div class="status-indicator status-en-attente"></div>
                                <strong>Décanteur</strong>
                                <div class="mt-2">
                                    <small class="text-muted">En attente</small>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                
                <div class="process-card">
                    <h5>🔬 Enzymes & Corrections</h5>
                    <div class="row">
                        <div class="col-4">
                            <div class="text-center p-2 border rounded">
                                <div class="status-indicator status-en-cours"></div>
                                <strong>Enzyme</strong><br>
                                <small>10:30</small>
                            </div>
                        </div>
                        <div class="col-4">
                            <div class="text-center p-2 border rounded">
                                <div class="status-indicator status-en-attente"></div>
                                <strong>Avant Correct</strong><br>
                                <small>--:--</small>
                            </div>
                        </div>
                        <div class="col-4">
                            <div class="text-center p-2 border rounded">
                                <div class="status-indicator status-en-attente"></div>
                                <strong>Après Correct</strong><br>
                                <small>--:--</small>
                            </div>
                        </div>
                    </div>
                </div>
                {% else %}
                <div class="of-header">
                    <h3>🌾 Aucun OF actif</h3>
                    <p class="mb-0">Pas d'ordre de fabrication en cours</p>
                </div>
                {% endif %}
            </div>
            
            <!-- OF 2 -->
            <div class="col-md-6">
                {% if of2 %}
                <div class="of-header">
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            <h3>🌾 OF {{ of2.numero }}</h3>
                            <p class="mb-0">
                                <span class="status-indicator status-{{ of2.statut }}"></span>
                                Statut: {{ of2.statut|upper }}
                            </p>
                            {% if of2.produit %}
                            <p class="mb-0">Produit: {{ of2.produit }}</p>
                            {% endif %}
                            {% if of2.quantite %}
                            <p class="mb-0">Quantité: {{ of2.quantite }}</p>
                            {% endif %}
                        </div>
                        <div>
                            <button class="btn btn-outline-primary btn-sm" onclick="openHaccpModal('{{ of2.numero }}', 'cereales')">
                                <i class="fas fa-shield-alt me-1"></i>HACCP
                            </button>
                        </div>
                    </div>
                </div>
                
                <div class="process-card">
                    <h5>📈 Processus de Production</h5>
                    <div class="row">
                        <div class="col-6">
                            <div class="text-center p-3 border rounded">
                                <div class="status-indicator status-termine"></div>
                                <strong>Cuves Céréales</strong>
                                <div class="mt-2">
                                    <small class="text-muted">Terminé</small>
                                </div>
                            </div>
                        </div>
                        <div class="col-6">
                            <div class="text-center p-3 border rounded">
                                <div class="status-indicator status-en-cours"></div>
                                <strong>Décanteur</strong>
                                <div class="mt-2">
                                    <small class="text-muted">En cours</small>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                
                <div class="process-card">
                    <h5>🔬 Enzymes & Corrections</h5>
                    <div class="row">
                        <div class="col-4">
                            <div class="text-center p-2 border rounded">
                                <div class="status-indicator status-termine"></div>
                                <strong>Enzyme</strong><br>
                                <small>09:15</small>
                            </div>
                        </div>
                        <div class="col-4">
                            <div class="text-center p-2 border rounded">
                                <div class="status-indicator status-termine"></div>
                                <strong>Avant Correct</strong><br>
                                <small>10:45</small>
                            </div>
                        </div>
                        <div class="col-4">
                            <div class="text-center p-2 border rounded">
                                <div class="status-indicator status-en-attente"></div>
                                <strong>Après Correct</strong><br>
                                <small>--:--</small>
                            </div>
                        </div>
                    </div>
                </div>
                {% else %}
                <div class="of-header">
                    <h3>🌾 Slot libre</h3>
                    <p class="mb-0">Prêt pour un nouvel OF</p>
                </div>
                {% endif %}
            </div>
        </div>
        
        <!-- Statistiques -->
        <div class="row mt-4">
            <div class="col-md-12">
                <div class="card">
                    <div class="card-header">
                        <h5>📊 Statistiques Générales</h5>
                    </div>
                    <div class="card-body">
                        <div class="row text-center">
                            <div class="col-md-3">
                                <h4 class="text-primary">{{ production_count }}</h4>
                                <p>Productions totales</p>
                            </div>
                            <div class="col-md-3">
                                <h4 class="text-success">{{ haccp_count }}</h4>
                                <p>Contrôles HACCP</p>
                            </div>
                            <div class="col-md-3">
                                <h4 class="text-warning">{{ of1 and of2 ? 2 : (of1 ? 1 : 0) }}</h4>
                                <p>OF actifs</p>
                            </div>
                            <div class="col-md-3">
                                <h4 class="text-info">{{ "now"|date("H:i") }}</h4>
                                <p>Heure actuelle</p>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    
    <!-- Inclusion de la popup HACCP -->
    {% include 'partials/haccp_modal.html.twig' %}
    
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
    <script src="/build/runtime.js"></script>
    <script src="/build/app.js"></script>
    
    <script>
    // Script HACCP à charger après Bootstrap
    function openHaccpModal(ofId, productionType) {
        console.log('Tentative d\'ouverture de la popup HACCP pour OF:', ofId);
        
        // Vérifier que l'élément existe
        const modalElement = document.getElementById('haccpModal');
        if (!modalElement) {
            console.error('Élément haccpModal non trouvé');
            alert('Erreur: Popup HACCP non trouvée');
            return;
        }
        
        // Remplir l'ID de l'OF
        const ofIdInput = document.getElementById('haccp_of_id');
        if (ofIdInput) {
            ofIdInput.value = ofId;
        }
        
        // Vérifier que Bootstrap est chargé
        if (typeof bootstrap === 'undefined') {
            console.error('Bootstrap non chargé');
            alert('Erreur: Bootstrap non chargé');
            return;
        }
        
        try {
            // Ouvrir la modal
            const modal = new bootstrap.Modal(modalElement);
            modal.show();
        } catch (error) {
            console.error('Erreur lors de l\'ouverture de la modal:', error);
            alert('Erreur lors de l\'ouverture de la popup: ' + error.message);
        }
    }
    
    // Gestion de la soumission du formulaire HACCP
    document.addEventListener('DOMContentLoaded', function() {
        const haccpForm = document.getElementById('haccpForm');
        if (haccpForm) {
            // Validation en temps réel des valeurs
            function updateStatus() {
                // Contrôle température COP
                const temperatureCible = parseFloat(document.getElementById('temperature_cible').value) || 110;
                const temperatureIndique = parseFloat(document.getElementById('temperature_indique').value) || 0;
                const statusTemperature = document.getElementById('status_temperature');
                
                if (temperatureIndique >= temperatureCible) {
                    statusTemperature.className = 'bg-success rounded p-2';
                    statusTemperature.style.height = '20px';
                } else if (temperatureIndique > 0) {
                    statusTemperature.className = 'bg-danger rounded p-2';
                    statusTemperature.style.height = '20px';
                } else {
                    statusTemperature.className = 'bg-secondary rounded p-2';
                    statusTemperature.style.height = '20px';
                }
                
                // Contrôle filtre pasteurisateur (case à cocher)
                const filtrePasteurisateur = document.getElementById('filtre_pasteurisateur_resultat').checked;
                const statusFiltrePasteurisateur = document.getElementById('status_filtre_pasteurisateur');
                
                if (filtrePasteurisateur) {
                    statusFiltrePasteurisateur.className = 'bg-success rounded p-2';
                } else {
                    statusFiltrePasteurisateur.className = 'bg-secondary rounded p-2';
                }
                statusFiltrePasteurisateur.style.height = '20px';
                
                // Contrôle filtre NEP (case à cocher)
                const filtreNep = document.getElementById('filtre_nep_resultat').checked;
                const statusFiltreNep = document.getElementById('status_filtre_nep');
                
                if (filtreNep) {
                    statusFiltreNep.className = 'bg-success rounded p-2';
                } else {
                    statusFiltreNep.className = 'bg-secondary rounded p-2';
                }
                statusFiltreNep.style.height = '20px';
            }
            
            // Écouteurs pour les champs
            document.getElementById('temperature_cible').addEventListener('input', updateStatus);
            document.getElementById('temperature_indique').addEventListener('input', updateStatus);
            document.getElementById('filtre_pasteurisateur_resultat').addEventListener('change', updateStatus);
            document.getElementById('filtre_nep_resultat').addEventListener('change', updateStatus);
            
            haccpForm.addEventListener('submit', function(e) {
                e.preventDefault();
                
                // Validation critique pour température
                const temperatureCible = parseFloat(document.getElementById('temperature_cible').value) || 110;
                const temperatureIndique = parseFloat(document.getElementById('temperature_indique').value) || 0;
                
                if (temperatureIndique > 0 && temperatureIndique < temperatureCible) {
                    const confirm = window.confirm('⚠️ ATTENTION: La température indiquée (' + temperatureIndique + ') est inférieure à la température cible (' + temperatureCible + ').\n\nVoulez-vous quand même enregistrer ce contrôle ?');
                    if (!confirm) {
                        return;
                    }
                }
                
                // Envoi AJAX
                const formData = new FormData(this);
                
                fetch('/haccp/create', {
                    method: 'POST',
                    body: formData
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        alert('✅ Contrôles HACCP enregistrés avec succès !');
                        
                        // Fermer la modal
                        const modal = bootstrap.Modal.getInstance(document.getElementById('haccpModal'));
                        modal.hide();
                        
                        // Réinitialiser le formulaire
                        document.getElementById('haccpForm').reset();
                        updateStatus(); // Réinitialiser les status
                        
                        // Optionnel : recharger la page pour voir les nouveaux données
                        location.reload();
                    } else {
                        alert('❌ ' + data.message);
                    }
                })
                .catch(error => {
                    console.error('Erreur:', error);
                    alert('❌ Erreur de communication avec le serveur');
                });
            });
        }
    });
    </script>
</body>
</html>
